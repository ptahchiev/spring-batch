<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
		"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="whatsNew">
  <title>What's New in Spring Batch 3.0</title>

  <para>The Spring Batch 3.0 release has five major themes:</para>

  <itemizedlist>
    <listitem>
      <para>JSR-352 Support</para>
    </listitem>

	<listitem>
		<para>Upgrade to Support Spring 4 and Java 8</para>
	</listitem>

    <listitem>
      <para>Promote Spring Batch Integration to Spring Batch</para>
    </listitem>

    <listitem>
      <para>JobScope Support</para>
    </listitem>

    <listitem>
      <para>SQLite Support</para>
    </listitem>
  </itemizedlist>

  <section id="whatsNewJSR-352Support">
    <title>JSR-352 Support</title>

    <para>JSR-352 is the new java specification for batch processing.  Heavily inspired by Spring Batch, this
		specification provides similar functionality to what Spring Batch already supports.  However, Spring Batch 3.0
	    has implemented the specification and now supports the definition of batch jobs in compliance with the standard.
	    An example of a batch job configured using JSR-352's Job Specification Language (JSL) would look like below:
	</para>

	  <programlisting language="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;job id="myJob3" xmlns="http://xmlns.jcp.org/xml/ns/javaee" version="1.0"&gt;
    &lt;step id="step1" &gt;
        &lt;batchlet ref="testBatchlet" /&gt;
    &lt;/step&gt;
&lt;/job&gt;
	  </programlisting>

	  <para>See section <xref linkend="jsr-352"/> for more details.</para>
  </section>

  <section id="whatsNewPromoteSpringBatchIntegrationToSpringBatch">
    <title>Promote Spring Batch Integration to Spring Batch</title>

    <para>Spring Batch Integration has been a sub module of the Spring Batch Admin project now for a few years.  It
	      provides functionality to better integrate the capabilities provided in Spring Integration with Spring Batch.
	      Specific functionality includes:</para>
	  <itemizedlist>
		  <listitem>
			  <para>Launching jobs via messages</para>
		  </listitem>
		  <listitem>
			  <para>Asynchronous <classname>ItemProcessors</classname></para>
		  </listitem>
		  <listitem>
			  <para>Providing feedback with information messages</para>
		  </listitem>
		  <listitem>
			  <para>Externalizing batch process execution via remote partitioning and remote chunking</para>
		  </listitem>
	  </itemizedlist>

	  <para>See section <xref linkend="springBatchIntegration"/> for details.</para>
  </section>

  <section id="whatsNewUpgradeToSupportSpring4andJava8">
    <title>Upgrade to Support Spring 4 and Java 8</title>

    <para>With the promotion of Spring Batch Integration to be a module of the Spring Batch project, it has been updated
	      to use Spring Integration 4.  Spring Integration 4 moves the core messaging APIs to Spring core.  Because of
	      this, Spring Batch 3 will now require Spring 4 or greater.</para>

    <para>As part of the dependency updates that have occurred with this major release, Spring Batch now supports being
	      run on Java 8.  It will still execute on Java 6 or higher as well.</para>
  </section>

  <section id="whatsNewJobScopeSupport">
    <title>JobScope Support</title>

    <para>The Spring scope "step" used in Spring Batch has had a pivotal role in batch applications, providing late
		binding functionality for a long time now.  With the 3.0 release Spring Batch now supports a "job" scope.  This
		new scope allows for the delayed construction of objects until a Job is actually launched as well as providing
		a facility for new instances for each execution of a job.  You can read the details about this new bean scope
		in the section <xref linkend="job-scope"/>.</para>
  </section>

  <section id="whatsNewSQLiteSupport">
    <title>SQLite Support</title>

    <para>SQLite has been added as a newly supported database option for the <classname>JobRepository</classname> by
		adding job repository ddl for SQLite.  This provides a useful, file based, data store for testing purposes.</para>
  </section>
</chapter>
